// Generated by CoffeeScript 1.3.3
(function() {
  var acceptableTimeout, assert, driverOptions, rootURL, webdriver;

  webdriver = require("wd");

  assert = require("assert");

  rootURL = "https://hapi-cms-dev.herokuapp.com/";

  driverOptions = {
    browserName: "phantomjs"
  };

  acceptableTimeout = 2000;

  describe("HAPI CMS", function() {
    return describe("homepage", function() {
      it("should have a title", function() {
        var finished, title;
        finished = false;
        title = "";
        runs(function() {
          var driver;
          driver = webdriver.remote();
          return driver.init(driverOptions, function(err, sessionid) {
            return driver.get(rootURL, function(err) {
              return driver.title(function(err, value) {
                title = value;
                finished = true;
                return driver.quit();
              });
            });
          });
        });
        waitsFor(function() {
          return finished;
        }, "say something", acceptableTimeout);
        return runs(function() {
          console.log(title);
          return expect(title).not.toBe("");
        });
      });
      return it("should have a login control", function() {
        var finished, frameExists;
        finished = false;
        frameExists = false;
        runs(function() {
          var driver;
          driver = webdriver.remote();
          return driver.init(driverOptions, function(err, sessionid) {
            return driver.get(rootURL, function(err) {
              return driver.frame(0, function(err) {
                if (err) {
                  console.log("Frame error " + err.message);
                }
                frameExists = !err;
                driver.quit();
                return finished = true;
              });
            });
          });
        });
        waitsFor(function() {
          return finished;
        }, "not sure what this is for", acceptableTimeout);
        return runs(function() {
          return expect(frameExists).not.toBe(false);
        });
      });
    });
  });

}).call(this);
